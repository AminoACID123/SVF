==========FUNCTION: __cxx_global_var_init==========
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = getelementptr %"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0
  %2 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* %1, i8* @__dso_handle) #3
  ret void
==========FUNCTION: _ZNSt8ios_base4InitC1Ev==========
==========FUNCTION: _ZNSt8ios_base4InitD1Ev==========
==========FUNCTION: __cxa_atexit==========
==========FUNCTION: _Z3addRiS_==========
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8

  store i32* %1, i32** %4, align 8

  %6 = load i32*, i32** %3, align 8

  %7 = load i32, i32* %6, align 4
  %8 = add nsw i32 %7, 1
  store i32 %8, i32* %6, align 4

  %9 = load i32*, i32** %4, align 8

  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* %9, align 4

  %12 = load i32*, i32** %3, align 8

  %13 = load i32, i32* %12, align 4

  %14 = load i32*, i32** %4, align 8

  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %13, %15
  store i32 %16, i32* %5, align 4

  %17 = load i32, i32* %5, align 4
  ret i32 %17
==========FUNCTION: main==========
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  store i32 0, i32* %1, align 4

  store i32 1, i32* %2, align 4

  %6 = load i32, i32* %3, align 4
  %7 = icmp sgt i32 %6, 3
  br i1 %7, label %8, label %10

  %9 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %4)

  br label %12

  %11 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %3)

  br label %12
  store i32 2, i32* %3, align 4

  %13 = load i32, i32* %2, align 4
  store i32 %13, i32* %5, align 4

  %14 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %3)

  store i32 %14, i32* %4, align 4

  %15 = load i32, i32* %4, align 4
  ret i32 %15
==========FUNCTION: _GLOBAL__sub_I_example.cpp==========
  call void @__cxx_global_var_init()
  ret void
