digraph "SVFG" {
	label="SVFG";

	Node0x55acb58e5f10 [shape=record,color=black,label="{FormalParmPHI ID: 121 PAGNode ID: 39\n i32* %0 \{ 0th arg _Z3addRiS_  \}}"];
	Node0x55acb58e5f10 -> Node0x55acb58d6160[style=solid];
	Node0x55acb58e5b90 [shape=record,color=black,label="{ActualRetPHI ID: 120 PAGNode ID: 89\n   %11 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %3) \{  \}}"];
	Node0x55acb58e5920 [shape=record,color=black,label="{FormalParmPHI ID: 119 PAGNode ID: 40\n i32* %1 \{ 1st arg _Z3addRiS_  \}}"];
	Node0x55acb58e5920 -> Node0x55acb58d6290[style=solid];
	Node0x55acb58e54b0 [shape=record,color=black,label="{ActualRetPHI ID: 118 PAGNode ID: 86\n   %9 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %4) \{  \}}"];
	Node0x55acb58e51c0 [shape=record,color=black,label="{ActualRetPHI ID: 117 PAGNode ID: 95\n   %14 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %3) \{  \}}"];
	Node0x55acb58e51c0 -> Node0x55acb58d6c10[style=solid];
	Node0x55acb58e0750 [shape=record,color=yellow,penwidth=2,label="{ActualOUTSVFGNode ID: 114 at callsite:   %14 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %3) \{fun: main\}4V_5 = CSCHI(MR_4V_4)\npts\{72 \}\nCS[\{  \}]}"];
	Node0x55acb58e0560 [shape=record,color=yellow,penwidth=2,label="{ActualOUTSVFGNode ID: 113 at callsite:   %14 = call i32 @_Z3addRiS_(i32* dereferenceable(4) %2, i32* dereferenceable(4) %3) \{fun: main\}6V_4 = CSCHI(MR_6V_3)\npts\{74 \}\nCS[\{  \}]}"];
	Node0x55acb58ddca0 [shape=record,color=yellow,penwidth=2,label="{FormalINSVFGNode ID: 87 \{fun: main\}8V_1 = ENCHI(MR_8V_0)\npts\{76 \}\n|{|<s1>3|<s2>3}}"];
	Node0x55acb58ddca0 -> Node0x55acb58d6c10[style=dashed];
	Node0x55acb58ddca0:s1 -> Node0x55acb58d5590[style=dashed,color=red];
	Node0x55acb58ddca0:s2 -> Node0x55acb58d64f0[style=dashed,color=red];
	Node0x55acb58ddb20 [shape=record,color=yellow,penwidth=2,label="{FormalINSVFGNode ID: 86 \{fun: main\}6V_1 = ENCHI(MR_6V_0)\npts\{74 \}\n|{|<s2>4|<s3>4}}"];
	Node0x55acb58ddb20 -> Node0x55acb58d5b10[style=dashed];
	Node0x55acb58ddb20 -> Node0x55acb58d69b0[style=dashed];
	Node0x55acb58ddb20:s2 -> Node0x55acb58d5590[style=dashed,color=red];
	Node0x55acb58ddb20:s3 -> Node0x55acb58d64f0[style=dashed,color=red];
	Node0x55acb58dd6f0 [shape=record,color=black,label="{IntraMSSAPHISVFGNode ID: 84 \{fun: main\}MSSAPHISVFGNode ID: 84 \{fun: main\}MR_4V_4 = PHI(MR_4V_3, MR_4V_6, )\npts\{72 \}\{  \}|{|<s1>5|<s2>5}}"];
	Node0x55acb58dd6f0 -> Node0x55acb58d59b0[style=dashed];
	Node0x55acb58dd6f0:s1 -> Node0x55acb58d5430[style=dashed,color=red];
	Node0x55acb58dd6f0:s2 -> Node0x55acb58d63c0[style=dashed,color=red];
	Node0x55acb58da130 [shape=record,color=black,penwidth=2,label="{CmpVFGNode ID: 81 PAGEdge: [83 = cmp(84, 82, )]\n    %7 = icmp sgt i32 %6, 3 \{  \}}"];
	Node0x55acb58da130 -> Node0x55acb58d9f00[style=solid];
	Node0x55acb58d9f00 [shape=record,color=black,penwidth=2,label="{UnaryOPVFGNode ID: 80 PAGEdge: [85 = Unary(83, )]      br i1 %7, label %8, label %10 \{  \}}"];
	Node0x55acb58d9cd0 [shape=record,color=black,penwidth=2,label="{UnaryOPVFGNode ID: 79 PAGEdge: [90 = Unary(3, )]      br label %12 \{  \}}"];
	Node0x55acb58d9a30 [shape=record,color=black,penwidth=2,label="{UnaryOPVFGNode ID: 78 PAGEdge: [87 = Unary(3, )]      br label %12 \{  \}}"];
	Node0x55acb58d97d0 [shape=record,color=black,penwidth=2,label="{BinaryOPVFGNode ID: 77 PAGEdge: [51 = Binary(52, 50, )]      %8 = add nsw i32 %7, 1 \{  \}}"];
	Node0x55acb58d97d0 -> Node0x55acb58d63c0[style=solid];
	Node0x55acb58d9570 [shape=record,color=black,penwidth=2,label="{BinaryOPVFGNode ID: 76 PAGEdge: [56 = Binary(52, 55, )]      %11 = add nsw i32 %10, 1 \{  \}}"];
	Node0x55acb58d9570 -> Node0x55acb58d64f0[style=solid];
	Node0x55acb58d92a0 [shape=record,color=black,penwidth=2,label="{BinaryOPVFGNode ID: 75 PAGEdge: [62 = Binary(61, 59, )]      %16 = add nsw i32 %13, %15 \{  \}}"];
	Node0x55acb58d92a0 -> Node0x55acb58d6620[style=solid];
	Node0x55acb58d8fb0 [shape=record,color=black,label="{IntraPHIVFGNode ID: 74 PAGNode: [38 = PHI(64, )]    _Z3addRiS_ \{  \}|{<s0>3|<s1>4|<s2>5}}"];
	Node0x55acb58d8fb0:s0 -> Node0x55acb58e54b0[style=solid,color=blue];
	Node0x55acb58d8fb0:s1 -> Node0x55acb58e5b90[style=solid,color=blue];
	Node0x55acb58d8fb0:s2 -> Node0x55acb58e51c0[style=solid,color=blue];
	Node0x55acb58d8ce0 [shape=record,color=black,label="{IntraPHIVFGNode ID: 73 PAGNode: [68 = PHI(97, )]    main \{  \}}"];
	Node0x55acb58d46d0 [shape=record,color=purple,label="{GepVFGNode ID: 28 NormalGepPE: [104\<--9]  \n @llvm.global_ctors = appending global [1 x \{ i32, void ()*, i8* \}] [\{ i32, void ()*, i8* \} \{ i32 65535, void ()* @_GLOBAL__sub_I_example.cpp, i8* null \}] \{ Glob  \}}"];
	Node0x55acb58d4570 [shape=record,color=purple,label="{GepVFGNode ID: 27 NormalGepPE: [103\<--9]  \n @llvm.global_ctors = appending global [1 x \{ i32, void ()*, i8* \}] [\{ i32, void ()*, i8* \} \{ i32 65535, void ()* @_GLOBAL__sub_I_example.cpp, i8* null \}] \{ Glob  \}}"];
	Node0x55acb58d4410 [shape=record,color=purple,label="{GepVFGNode ID: 26 NormalGepPE: [20\<--4]  \n   %1 = getelementptr %\"class.std::ios_base::Init\", %\"class.std::ios_base::Init\"* @_ZStL8__ioinit, i32 0, i32 0 \{  \}}"];
	Node0x55acb58d42b0 [shape=record,color=black,label="{CopyVFGNode ID: 25 CopyPE: [22\<--23]  \n void (i8*)* bitcast (void (%\"class.std::ios_base::Init\"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*) \{ Can only get source location for instruction, argument, global var, function or constant data. \}}"];
	Node0x55acb58d4150 [shape=record,color=black,label="{CopyVFGNode ID: 24 CopyPE: [2\<--3]  \n i8* null \{ constant data \}}"];
	Node0x55acb58d3ff0 [shape=record,color=green,label="{AddrVFGNode ID: 23 AddrPE: [11\<--99]  \n _GLOBAL__sub_I_example.cpp \{  \}}"];
	Node0x55acb58d3ff0 -> Node0x55acb58d5f00[style=solid];
	Node0x55acb58d3d30 [shape=record,color=green,label="{AddrVFGNode ID: 21 AddrPE: [75\<--76]  \n   %4 = alloca i32, align 4 \{  \}|{<s0>3}}"];
	Node0x55acb58d3d30:s0 -> Node0x55acb58e5920[style=solid,color=red];
	Node0x55acb58d3bd0 [shape=record,color=green,label="{AddrVFGNode ID: 20 AddrPE: [73\<--74]  \n   %3 = alloca i32, align 4 \{  \}|{<s0>4|<s1>5}}"];
	Node0x55acb58d3bd0:s0 -> Node0x55acb58e5920[style=solid,color=red];
	Node0x55acb58d3bd0:s1 -> Node0x55acb58e5920[style=solid,color=red];
	Node0x55acb58d3a70 [shape=record,color=green,label="{AddrVFGNode ID: 19 AddrPE: [71\<--72]  \n   %2 = alloca i32, align 4 \{  \}|{<s0>3|<s1>4|<s2>5}}"];
	Node0x55acb58d3a70:s0 -> Node0x55acb58e5f10[style=solid,color=red];
	Node0x55acb58d3a70:s1 -> Node0x55acb58e5f10[style=solid,color=red];
	Node0x55acb58d3a70:s2 -> Node0x55acb58e5f10[style=solid,color=red];
	Node0x55acb5887980 [shape=record,color=grey,label="{NullPtrVFGNode ID: 0 PAGNode ID: 3\n}"];
	Node0x55acb5887980 -> Node0x55acb58d4150[style=solid];
	Node0x55acb5887980 -> Node0x55acb58d6030[style=solid];
	Node0x55acb5887980 -> Node0x55acb58d9a30[style=solid];
	Node0x55acb5887980 -> Node0x55acb58d9cd0[style=solid];
	Node0x55acb58d2640 [shape=record,color=green,label="{AddrVFGNode ID: 6 AddrPE: [4\<--6]  \n @_ZStL8__ioinit = internal global %\"class.std::ios_base::Init\" zeroinitializer, align 1 \{ Glob  \}}"];
	Node0x55acb58d2640 -> Node0x55acb58d4410[style=solid];
	Node0x55acb58d2880 [shape=record,color=green,label="{AddrVFGNode ID: 8 AddrPE: [9\<--13]  \n @llvm.global_ctors = appending global [1 x \{ i32, void ()*, i8* \}] [\{ i32, void ()*, i8* \} \{ i32 65535, void ()* @_GLOBAL__sub_I_example.cpp, i8* null \}] \{ Glob  \}}"];
	Node0x55acb58d2880 -> Node0x55acb58d4570[style=solid];
	Node0x55acb58d2880 -> Node0x55acb58d46d0[style=solid];
	Node0x55acb58d2880 -> Node0x55acb58d4830[style=solid];
	Node0x55acb58d2e00 [shape=record,color=green,label="{AddrVFGNode ID: 12 AddrPE: [23\<--29]  \n _ZNSt8ios_base4InitD1Ev \{  \}}"];
	Node0x55acb58d2e00 -> Node0x55acb58d42b0[style=solid];
	Node0x55acb58d4830 [shape=record,color=purple,label="{GepVFGNode ID: 29 NormalGepPE: [105\<--9]  \n @llvm.global_ctors = appending global [1 x \{ i32, void ()*, i8* \}] [\{ i32, void ()*, i8* \} \{ i32 65535, void ()* @_GLOBAL__sub_I_example.cpp, i8* null \}] \{ Glob  \}}"];
	Node0x55acb58d4b70 [shape=record,color=red,label="{LoadVFGNode ID: 30 LoadPE: [49\<--41]  \n   %6 = load i32*, i32** %3, align 8 \{  \}}"];
	Node0x55acb58d4eb0 [shape=record,color=red,label="{LoadVFGNode ID: 31 LoadPE: [58\<--41]  \n   %12 = load i32*, i32** %3, align 8 \{  \}}"];
	Node0x55acb58d5010 [shape=record,color=red,label="{LoadVFGNode ID: 32 LoadPE: [54\<--43]  \n   %9 = load i32*, i32** %4, align 8 \{  \}}"];
	Node0x55acb58d5170 [shape=record,color=red,label="{LoadVFGNode ID: 33 LoadPE: [60\<--43]  \n   %14 = load i32*, i32** %4, align 8 \{  \}}"];
	Node0x55acb58d52d0 [shape=record,color=red,label="{LoadVFGNode ID: 34 LoadPE: [64\<--45]  \n   %17 = load i32, i32* %5, align 4 \{  \}}"];
	Node0x55acb58d52d0 -> Node0x55acb58d8fb0[style=solid];
	Node0x55acb58d5430 [shape=record,color=red,label="{LoadVFGNode ID: 35 LoadPE: [50\<--49]  \n   %7 = load i32, i32* %6, align 4 \{  \}}"];
	Node0x55acb58d5430 -> Node0x55acb58d97d0[style=solid];
	Node0x55acb58d5590 [shape=record,color=red,label="{LoadVFGNode ID: 36 LoadPE: [55\<--54]  \n   %10 = load i32, i32* %9, align 4 \{  \}}"];
	Node0x55acb58d5590 -> Node0x55acb58d9570[style=solid];
	Node0x55acb58d56f0 [shape=record,color=red,label="{LoadVFGNode ID: 37 LoadPE: [59\<--58]  \n   %13 = load i32, i32* %12, align 4 \{  \}}"];
	Node0x55acb58d56f0 -> Node0x55acb58d92a0[style=solid];
	Node0x55acb58d5850 [shape=record,color=red,label="{LoadVFGNode ID: 38 LoadPE: [61\<--60]  \n   %15 = load i32, i32* %14, align 4 \{  \}}"];
	Node0x55acb58d5850 -> Node0x55acb58d92a0[style=solid];
	Node0x55acb58d59b0 [shape=record,color=red,label="{LoadVFGNode ID: 39 LoadPE: [93\<--71]  \n   %13 = load i32, i32* %2, align 4 \{  \}}"];
	Node0x55acb58d59b0 -> Node0x55acb58d6ae0[style=solid];
	Node0x55acb58d5b10 [shape=record,color=red,label="{LoadVFGNode ID: 40 LoadPE: [82\<--73]  \n   %6 = load i32, i32* %3, align 4 \{  \}}"];
	Node0x55acb58d5b10 -> Node0x55acb58da130[style=solid];
	Node0x55acb58d5c70 [shape=record,color=red,label="{LoadVFGNode ID: 41 LoadPE: [97\<--75]  \n   %15 = load i32, i32* %4, align 4 \{  \}}"];
	Node0x55acb58d5c70 -> Node0x55acb58d8ce0[style=solid];
	Node0x55acb58d5f00 [shape=record,color=blue,label="{StoreVFGNode ID: 43 StorePE: [104\<--11]  \n _GLOBAL__sub_I_example.cpp \{  \}}"];
	Node0x55acb58d6030 [shape=record,color=blue,label="{StoreVFGNode ID: 44 StorePE: [105\<--3]  \n i8* null \{ constant data \}}"];
	Node0x55acb58d6160 [shape=record,color=blue,label="{StoreVFGNode ID: 45 StorePE: [41\<--39]  \n   store i32* %0, i32** %3, align 8 \{  \}}"];
	Node0x55acb58d6160 -> Node0x55acb58d4b70[style=dashed];
	Node0x55acb58d6160 -> Node0x55acb58d4eb0[style=dashed];
	Node0x55acb58d6290 [shape=record,color=blue,label="{StoreVFGNode ID: 46 StorePE: [43\<--40]  \n   store i32* %1, i32** %4, align 8 \{  \}}"];
	Node0x55acb58d6290 -> Node0x55acb58d5010[style=dashed];
	Node0x55acb58d6290 -> Node0x55acb58d5170[style=dashed];
	Node0x55acb58d63c0 [shape=record,color=blue,label="{StoreVFGNode ID: 47 StorePE: [49\<--51]  \n   store i32 %8, i32* %6, align 4 \{  \}|{|<s1>3|<s2>4|<s3>5}}"];
	Node0x55acb58d63c0 -> Node0x55acb58d56f0[style=dashed];
	Node0x55acb58d63c0:s1 -> Node0x55acb58dd6f0[style=dashed,color=blue];
	Node0x55acb58d63c0:s2 -> Node0x55acb58dd6f0[style=dashed,color=blue];
	Node0x55acb58d63c0:s3 -> Node0x55acb58e0750[style=dashed,color=blue];
	Node0x55acb58d64f0 [shape=record,color=blue,label="{StoreVFGNode ID: 48 StorePE: [54\<--56]  \n   store i32 %11, i32* %9, align 4 \{  \}|{|<s1>3|<s2>4|<s3>5}}"];
	Node0x55acb58d64f0 -> Node0x55acb58d5850[style=dashed];
	Node0x55acb58d64f0:s1 -> Node0x55acb58d6c10[style=dashed,color=blue];
	Node0x55acb58d64f0:s2 -> Node0x55acb58d69b0[style=dashed,color=blue];
	Node0x55acb58d64f0:s3 -> Node0x55acb58e0560[style=dashed,color=blue];
	Node0x55acb58d6620 [shape=record,color=blue,label="{StoreVFGNode ID: 49 StorePE: [45\<--62]  \n   store i32 %16, i32* %5, align 4 \{  \}}"];
	Node0x55acb58d6620 -> Node0x55acb58d52d0[style=dashed];
	Node0x55acb58d6880 [shape=record,color=blue,label="{StoreVFGNode ID: 51 StorePE: [71\<--52]  \n   store i32 1, i32* %2, align 4 \{  \}|{<s0>3|<s1>3|<s2>4|<s3>4}}"];
	Node0x55acb58d6880:s0 -> Node0x55acb58d5430[style=dashed,color=red];
	Node0x55acb58d6880:s1 -> Node0x55acb58d63c0[style=dashed,color=red];
	Node0x55acb58d6880:s2 -> Node0x55acb58d5430[style=dashed,color=red];
	Node0x55acb58d6880:s3 -> Node0x55acb58d63c0[style=dashed,color=red];
	Node0x55acb58d69b0 [shape=record,color=blue,label="{StoreVFGNode ID: 52 StorePE: [73\<--92]  \n   store i32 2, i32* %3, align 4 \{  \}|{<s0>5|<s1>5}}"];
	Node0x55acb58d69b0:s0 -> Node0x55acb58d5590[style=dashed,color=red];
	Node0x55acb58d69b0:s1 -> Node0x55acb58d64f0[style=dashed,color=red];
	Node0x55acb58d6ae0 [shape=record,color=blue,label="{StoreVFGNode ID: 53 StorePE: [77\<--93]  \n   store i32 %13, i32* %5, align 4 \{  \}}"];
	Node0x55acb58d6c10 [shape=record,color=blue,label="{StoreVFGNode ID: 54 StorePE: [75\<--95]  \n   store i32 %14, i32* %4, align 4 \{  \}}"];
	Node0x55acb58d6c10 -> Node0x55acb58d5c70[style=dashed];
}
